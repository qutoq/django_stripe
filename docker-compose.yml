version: '3.9'

services:
  web:
    container_name: web
    build:
      context: ./app
      dockerfile: Dockerfile
    image: app
    command: gunicorn django_stripe.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app/:/home/app/web
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/staticfiles/media
    expose:
      - 8000
    depends_on:
      - db
      - redis
    networks: 
      - mynetwork

  db:
    container_name: db
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=dat
    networks:
      - mynetwork

  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/staticfiles/media
    ports:
      - 1337:80
    depends_on:
      - web
    networks:
      - mynetwork

  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - mynetwork

  celery:
    container_name: celery
    build:
      context: ./app
      dockerfile: Dockerfile
    command: celery -A django_stripe worker --loglevel=info
    volumes:
      - ./app/:/home/app/web
    depends_on:
      - redis
      - db
    networks:
      - mynetwork

  flower:
    container_name: flower
    build:
      context: ./app
      dockerfile: Dockerfile
    command: celery -A django_stripe flower --port=5555
    ports:
      - "5555:5555"
    expose:
      - "5555"
    depends_on:
      - redis
    networks:
      - mynetwork

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  mynetwork:
    driver: bridge
  